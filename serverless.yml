service: jeffpay
provider:
  name: aws
  runtime: python3.7
  region: us-west-2
  timeout: 30
  memorySize: 3008
  environment:
    TZ: Asia/Tokyo
    USER_TABLE:
      Ref: UserTable
    WALLET_TABLE:
      Ref: WalletTable
    PAYMENT_HISTORY_TABLE:
      Ref: PaymentHistoryTable
    NOTIFICATION_ENDPOINT: "https://dkxmaha7zk.execute-api.us-west-2.amazonaws.com/prod/notification"
    LOCATION_ENDPOINT: "https://dkxmaha7zk.execute-api.us-west-2.amazonaws.com/prod/location"
    QUEUE_URL:  # SQS の URL が Lambda で必要で、こうやれば動的に与えられる
      Ref: NotificationQ
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "dynamodb:*"
        - 'sqs:*'
      Resource:
        - "*"

plugins:
  - serverless-dynamodb-local  # enable DynamoDB local
  - serverless-offline-python
  - serverless-prune-plugin  # deletes old version of CloudFormation stack deployments
  - serverless-python-requirements  # allow pip
  # - serverless-plugin-stage-variables  # for apigw logging

functions:
  CreateUser:
    handler: handler.user_create
    # reservedConcurrency: 1
    events:
      - http:
          path: users
          method: post
  WalletCharge:
    handler: handler.wallet_charge
    # reservedConcurrency: 1
    events:
      - http:
          path: wallet/charge
          method: post
  WalletUse:
    handler: handler.wallet_use
    # reservedConcurrency: 1
    events:
      - http:
          path: wallet/use
          method: post
  WalletTransfer:
    handler: handler.wallet_transfer
    # reservedConcurrency: 1
    events:
      - http:
          path: wallet/transfer
          method: post
  GetUserSummary:
    handler: handler.get_user_summary
    events:
      - http:
          path: users/{userId}/summary
          method: get
  GetPaymentHistory:
    handler: handler.get_payment_history
    events:
      - http:
          path: users/{userId}/history
          method: get

resources:
  Resources:
    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    WalletTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userId-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    PaymentHistoryTable:
      Type: AWS::DynamoDB::Table
      Properties:
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: walletId
            AttributeType: S
          - AttributeName: transactionId
            AttributeType: S
        KeySchema:
          - AttributeName: walletId
            KeyType: HASH
          - AttributeName: transactionId
            KeyType: RANGE

    NotificationQ:  # SQS
      Type: 'AWS::SQS::Queue'
      Properties:
        QueueName: notification-q-dev

    # ApiGatewayStage:  # for apigw logging
    #   Type: AWS::ApiGateway::stage
    #   Properties:
    #     MethodSettings:
    #       - DataTraceEnabled: true
    #         HttpMethod: "*"
    #         LoggingLevel: INFO
    #         ResourcePath: "/*"
    #         MetricsEnabled: true
